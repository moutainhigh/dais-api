<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dais.mapper.FcountlimitMapper" >
  <resultMap id="BaseResultMap" type="com.dais.model.Fcountlimit" >
    <id column="fId" property="fid" jdbcType="INTEGER" />
    <result column="fIp" property="fip" jdbcType="VARCHAR" />
    <result column="fCreateTime" property="fcreatetime" jdbcType="TIMESTAMP" />
    <result column="fCount" property="fcount" jdbcType="INTEGER" />
    <result column="fType" property="ftype" jdbcType="INTEGER" />
    <result column="version" property="version" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    fId, fIp, fCreateTime, fCount, fType, version
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dais.model.FcountlimitExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fcountlimit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from fcountlimit
    where fId = #{fid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from fcountlimit
    where fId = #{fid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dais.model.FcountlimitExample" >
    delete from fcountlimit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dais.model.Fcountlimit" >
    insert into fcountlimit (fId, fIp, fCreateTime, 
      fCount, fType, version
      )
    values (#{fid,jdbcType=INTEGER}, #{fip,jdbcType=VARCHAR}, #{fcreatetime,jdbcType=TIMESTAMP}, 
      #{fcount,jdbcType=INTEGER}, #{ftype,jdbcType=INTEGER}, #{version,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dais.model.Fcountlimit" >
    insert into fcountlimit
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fid != null" >
        fId,
      </if>
      <if test="fip != null" >
        fIp,
      </if>
      <if test="fcreatetime != null" >
        fCreateTime,
      </if>
      <if test="fcount != null" >
        fCount,
      </if>
      <if test="ftype != null" >
        fType,
      </if>
      <if test="version != null" >
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fid != null" >
        #{fid,jdbcType=INTEGER},
      </if>
      <if test="fip != null" >
        #{fip,jdbcType=VARCHAR},
      </if>
      <if test="fcreatetime != null" >
        #{fcreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="fcount != null" >
        #{fcount,jdbcType=INTEGER},
      </if>
      <if test="ftype != null" >
        #{ftype,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dais.model.FcountlimitExample" resultType="java.lang.Integer" >
    select count(*) from fcountlimit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update fcountlimit
    <set >
      <if test="record.fid != null" >
        fId = #{record.fid,jdbcType=INTEGER},
      </if>
      <if test="record.fip != null" >
        fIp = #{record.fip,jdbcType=VARCHAR},
      </if>
      <if test="record.fcreatetime != null" >
        fCreateTime = #{record.fcreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fcount != null" >
        fCount = #{record.fcount,jdbcType=INTEGER},
      </if>
      <if test="record.ftype != null" >
        fType = #{record.ftype,jdbcType=INTEGER},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update fcountlimit
    set fId = #{record.fid,jdbcType=INTEGER},
      fIp = #{record.fip,jdbcType=VARCHAR},
      fCreateTime = #{record.fcreatetime,jdbcType=TIMESTAMP},
      fCount = #{record.fcount,jdbcType=INTEGER},
      fType = #{record.ftype,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dais.model.Fcountlimit" >
    update fcountlimit
    <set >
      <if test="fip != null" >
        fIp = #{fip,jdbcType=VARCHAR},
      </if>
      <if test="fcreatetime != null" >
        fCreateTime = #{fcreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="fcount != null" >
        fCount = #{fcount,jdbcType=INTEGER},
      </if>
      <if test="ftype != null" >
        fType = #{ftype,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where fId = #{fid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dais.model.Fcountlimit" >
    update fcountlimit
    set fIp = #{fip,jdbcType=VARCHAR},
      fCreateTime = #{fcreatetime,jdbcType=TIMESTAMP},
      fCount = #{fcount,jdbcType=INTEGER},
      fType = #{ftype,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER}
    where fId = #{fid,jdbcType=INTEGER}
  </update>
</mapper>